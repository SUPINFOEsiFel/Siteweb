# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FEL\AdminBundle\Security\User\MeteorUser: sha512

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_METEOR_ACCESS: ROLE_USER
        ROLE_NEWS_ACCESS:   ROLE_USER
        ROLE_ADMIN:         [ROLE_USER, ROLE_NEWS_ACCESS, ROLE_METEOR_ACCESS]
        ROLE_SUPER_ADMIN:   [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        #in_memory:
            #memory:
                #users:
                    #user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    #admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        meteor:
            id: meteor_user_provider

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # the login page has to be accessible for everybody
        main:
            pattern:  ^/
            anonymous: ~
            form_login:
                #check_path: fel_admin_check
                login_path: fel_admin_login
                default_target_path: fel_admin_homepage
            logout:
                path:   fel_admin_logout
                target: fel_admin_login

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/news, roles: ROLE_NEWS_ACCESS }
        #- { path: ^/admin/events, roles: ROLE_METEOR_ACCESS }
        - { path: ^/admin, roles: ROLE_USER }